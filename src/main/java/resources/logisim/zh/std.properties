#
# std/Builtin.java
#
builtinLibrary = \u5185\u7F6E
# instance/StdAttr.java
stdFacingAttr = \u671D\u5411
stdDataWidthAttr = \u6570\u636E\u4F4D\u5BBD
stdTriggerAttr = \u89E6\u53D1\u65B9\u5F0F
stdTriggerRising = \u4E0A\u5347\u6CBF
stdTriggerFalling = \u4E0B\u964D\u6CBF
stdTriggerHigh = \u9AD8\u7535\u5E73
stdTriggerLow = \u4F4E\u7535\u5E73
stdTriggerLatch = \u9501\u5B58
stdLabelAttr = \u6807\u7B7E
stdLabelFontAttr = \u6807\u7B7E\u5B57\u4F53
# instance/InstanceTextField.java
changeLabelAction = \u66F4\u6539\u6807\u7B7E
#
# std/base/Base.java
#
baseLibrary = \u57FA\u7840\u5E93(Base)

# std/base/BitExtender.java
extenderComponent = \u4F4D\u6269\u5C55\u5668
extenderInAttr = \u8F93\u5165\u4F4D\u5BBD
extenderOutAttr = \u8F93\u51FA\u4F4D\u5BBD
extenderTypeAttr = \u6269\u5C55\u65B9\u5F0F
extenderOneType = 1\u6269\u5C55
extenderZeroType = 0\u6269\u5C55
extenderSignType = \u7B26\u53F7\u6269\u5C55
extenderInputType = \u8F93\u5165\u6269\u5C55
extenderMainLabel = \u6269\u5C55\u5668
extenderOneLabel = 1
extenderZeroLabel = 0
extenderSignLabel = \u7B26\u53F7
extenderInputLabel = \u8F93\u5165

# std/base/Clock
clockComponent = \u65F6\u949F(Clock)
clockHighAttr = \u9AD8\u7535\u5E73\u65F6\u957F
clockLowAttr = \u4F4E\u7535\u5E73\u65F6\u957F
clockDurationValue = %s \u6EF4\u7B54
clockDurationOneValue = %s \u6EF4\u7B54
durationSmallMessage = \u503C\u4E0D\u80FD\u5C0F\u4E8E %s.
durationLargeMessage = \u503C\u4E0D\u80FD\u5927\u4E8E %s.
freqInvalidMessage = \u503C\u4E0D\u662F\u4E00\u4E2A\u6709\u6548\u6574\u6570

# std/base/Pin
pinComponent = \u5F15\u811A(Pin)
pinInputName = \u8F93\u5165
pinOutputName = \u8F93\u51FA
pinThreeStateAttr = \u4E09\u6001?
pinOutputAttr = \u8F93\u51FA\u5F15\u811A?
pinPullAttr = \u672A\u5B9A\u4E49\u5904\u7406
pinPullNoneOption = \u4E0D\u53D8
pinPullUpOption = \u4E0A\u62C9
pinPullDownOption = \u4E0B\u62C9
pinLabelLocAttr = \u6807\u7B7E\u4F4D\u7F6E
pinInputToolTip = \u6DFB\u52A0\u4E00\u4E2A\u8F93\u5165\u5F15\u811A
pinOutputToolTip = \u6DFB\u52A0\u4E00\u4E2A\u8F93\u51FA\u5F15\u811A
pinFrozenTitle = \u5F15\u811A\u5DF2\u7ECF\u8FDE\u63A5\u5230\u4E3B\u7535\u8DEF.
pinFrozenQuestion = \u5F15\u811A\u5DF2\u7ECF\u8FDE\u63A5\u5230\u4E3B\u7535\u8DEF\uFF0C\u8981\u65B0\u5EFA\u4E00\u4E2A\u72B6\u6001\u5417?

# std/base/Probe
probeComponent = \u63A2\u9488(Probe)

# std/base/PullResistor
pullComponent = \u4E0A/\u4E0B\u62C9\u7535\u963B
pullTypeAttr = \u4E0A/\u4E0B\u62C9\u65B9\u5411
pullZeroType = 0
pullOneType = 1
pullErrorType = \u9519\u8BEF

# std/base/Text.java
textComponent = \u6807\u7B7E(Label)
textTextAttr = \u6587\u672C
textFontAttr = \u5B57\u4F53
textHorzAlignAttr = \u6C34\u5E73\u5BF9\u9F50
textHorzAlignLeftOpt = \u5DE6
textHorzAlignRightOpt = \u53F3
textHorzAlignCenterOpt = \u4E2D\u5FC3
textVertAlignAttr = \u5782\u76F4\u5BF9\u9F50
textVertAlignTopOpt = \u9876\u7AEF
textVertAlignBaseOpt = \u57FA\u7EBF
textVertAlignBottomOpt = \u5E95\u7AEF
textVertAlignCenterOpt = \u4E2D\u5FC3

# std/base/Tunnel.java
tunnelComponent = \u96A7\u9053(Tunnel)

#
# std/Wiring.java
#
wiringLibrary = \u7EBF\u8DEF(Wiring)
wiringGateAttr = Gate Location
wiringGateBottomRightOption = \u5E95\u90E8/\u53F3\u4FA7
wiringGateTopLeftOption = \u9876\u90E8/\u5DE6\u4FA7

# std/wiring/ProgrammableGenerator.java
ProgrammableGeneratorComponent = \u53EF\u7F16\u7A0B\u53D1\u751F\u5668

# std/wiring/Transistor.java
transistorComponent = \u4E09\u6781\u7BA1
transistorTypeAttr = \u7C7B\u578B
transistorTypeP = P-\u578B
transistorTypeN = N-\u578B

# std/wiring/TransmissionGate.java
transmissionGateComponent = \u4F20\u8F93\u95E8(Transmission Gate)

# std/wiring/Power.java
powerComponent = \u7535\u6E90(Power)

# std/wiring/Ground.java
groundComponent = \u63A5\u5730(Ground)

#
# std/Gates.java
#
gatesLibrary = \u903B\u8F91\u95E8(Gates)
gateSizeAttr = \u95E8\u5C3A\u5BF8
gateSizeNarrowOpt = \u5C0F\u5C3A\u5BF8
gateSizeNormalOpt = \u4E2D\u7B49
gateSizeWideOpt = \u5927\u5C3A\u5BF8
gateNegateAttr = \u53CD\u8F6C %s
gateInputsAttr = \u8F93\u5165\u5F15\u811A\u6570
gateOutput01 = 0/1
gateOutput0Z = 0/\u672A\u5B9A\u4E49
gateOutputZ1 = \u672A\u5B9A\u4E49/1
gateOutputAttr = \u8F93\u51FA\u503C
xorBehaviorAttr = \u591A\u8F93\u5165\u884C\u4E3A
xorBehaviorOne = \u5F53\u4E00\u4E2A\u8F93\u5165\u4E3A1\u65F6\u8F93\u51FA\u4E3A1
xorBehaviorOdd = \u5F53\u5947\u6570\u4E2A\u8F93\u5165\u4E3A1\u65F6\u8F93\u51FA\u4E3A1
# std/Constant.java
constantComponent = \u5E38\u91CF(Constant)
constantValueAttr = \u503C
# std/NotGate.java
notGateComponent = \u975E\u95E8(NOT Gate)
# std/Buffer.java
bufferComponent = \u7F13\u51B2\u5668(Buffer)
# std/AndGate.java
andGateComponent = \u4E0E\u95E8(AND Gate)
# std/NandGate.java
nandGateComponent = \u4E0E\u975E\u95E8(NAND Gate)
# std/NorGate.java
norGateComponent = \u6216\u975E\u95E8(NOR Gate)
# std/OrGate.java
orGateComponent = \u6216\u95E8(OR Gate)
# std/XorGate.java
xorGateComponent = \u5F02\u6216\u95E8(XOR Gate)
# std/XnorGate.java
xnorGateComponent = \u5F02\u6216\u975E(XNOR Gate)
# std/OddParityGate.java
oddParityComponent = \u5947\u6821\u9A8C(Odd Parity)
# std/EvenParityGate.java
evenParityComponent = \u5076\u6821\u9A8C(Even Parity)
# std/ControlledBuffer.java
controlledBufferComponent = \u4E09\u6001\u95E8(Controlled Buffer)
controlledInverterComponent = \u4E09\u6001\u975E\u95E8(Controlled Inverter)
controlledControlOption = \u63A7\u5236\u7EBF\u8DEF\u4F4D\u7F6E
controlledLeftHanded = \u5DE6\u624B\u578B
controlledRightHanded = \u53F3\u624B\u578B
NegateBufferControl = \u975E\u95E8\u63A7\u5236\u8F93\u5165(Negate Control Input)
#
# std/TTL.java
#
VccGndPorts = \u5305\u62EC\u7535\u6E90/\u63A5\u5730\u5F15\u811A
ShowInternalStructure = \u663E\u793A\u5185\u90E8\u7ED3\u6784
LampTestInTip = Lamp Test: when 0, sets all the outputs to 1
BlankingInputInTip = Blanking Input: when 0, sets all the outputs to 0
RippleBlankingInputInTip = Ripple Blanking Input: when it's 0 and A, B, C, D are 0, sets all the outputs to 0
#
# std/Memory.java
#
memoryLibrary = \u5B58\u50A8\u5E93(Memory)
memEnableLabel = en
# AbstractFlipFlop.java
flipFlopClockTip = \u65F6\u949F: \u89E6\u53D1\u65F6\u66F4\u65B0\u72B6\u6001
flipFlopQTip = \u5F53\u524D\u89E6\u53D1\u5668\u72B6\u6001
flipFlopNotQTip = \u5F53\u524D\u89E6\u53D1\u5668\u72B6\u6001\u7684\u975E\u503C
flipFlopResetTip = \u6E05\u7A7A:\u5F53\u8F93\u51651\u65F6,\u5F02\u6B65\u91CD\u7F6E\u89E6\u53D1\u5668\u72B6\u6001\u4E3A0
flipFlopPresetTip = \u7F6E\u4F4D:\u5F53\u8F93\u5165\u4E3A%s,\u5F02\u6B65\u91CD\u7F6E\u89E6\u53D1\u5668\u72B6\u6001\u4E3A1
flipFlopEnableTip = \u4F7F\u80FD\uFF1A\u5F53\u8F93\u5165\u4E3A\u96F6\u65F6\uFF0C\u5FFD\u7565\u65F6\u949F\u8F93\u5165
PresetClearPosition = \u7F6E\u4F4D/\u6E05\u96F6 \u4F4D\u7F6E
AboveBelow = \u4E0A/\u4E0B
BelowAbove = \u4E0B/\u4E0A
Legacy = Legacy
NegatePresetClear = \u975E\u95E8 \u7F6E\u4F4D/\u6E05\u96F6 \u8F93\u5165
NewFFLayout = \u4F7F\u7528\u65B0\u5E03\u5C40
# std/Counter.java
counterComponent = \u8BA1\u6570\u5668(Counter)
counterMaxAttr   = \u6700\u5927\u503C
counterGoalAttr  = \u6EA2\u51FA\u65F6\u64CD\u4F5C
counterGoalWrap  = \u91CD\u65B0\u8BA1\u6570
counterGoalStay  = \u4FDD\u6301\u6700\u5927\u503C
counterGoalContinue = \u7EE7\u7EED\u8BA1\u6570
counterGoalLoad  = \u52A0\u8F7D\u4E0B\u4E00\u4E2A\u503C
counterQTip      = \u8F93\u51FA:\u5F53\u524D\u8BA1\u6570\u503C
counterClockTip  = \u65F6\u949F: \u89E6\u53D1\u65F6\u66F4\u65B0\u72B6\u6001
counterDataTip   = \u6570\u636E:\u52A0\u8F7D\u8FDB\u8BA1\u6570\u5668\u7684\u503C
counterLoadTip   = \u52A0\u8F7D:\u4E3A1\u65F6,\u5982\u679C\u8BA1\u6570\u7AEF\u4E3A0,\u4ECE\u6570\u636E\u7AEF\u52A0\u8F7D\u503C;\u5426\u5219\u8FDB\u884C\u53CD\u5411\u8BA1\u6570
counterEnableTip = \u8BA1\u6570:\u4E3A1\u65F6,\u8FDB\u884C\u8BA1\u6570,\u5982\u679C\u52A0\u8F7D\u7AEF\u4E3A1,\u8FDB\u884C\u53CD\u5411\u8BA1\u6570
counterResetTip  = \u6E05\u7A7A:\u4E3A1\u65F6,\u5F02\u6B65\u91CD\u7F6E\u8BA1\u6570\u5668\u4E3A0
counterCarryTip  = \u8FDB\u4F4D:\u6B63\u5411\u8BA1\u6570\u8FBE\u5230\u6700\u5927\u503C\u65F6\u8F93\u51FA1;\u53CD\u5411\u8BA1\u6570\u8FBE\u5230\u6700\u5C0F\u503C\u65F6\u8F93\u51FA1
counterEnableLabel = ct
counterLabel = ctr
counterBehavior = \u8BA1\u6570\u5668\u884C\u4E3A
counterNewBehavior = \u65B0\u884C\u4E3A
counterOldBehavior = \u65E7\u884C\u4E3A
newcounterLoadTip = \u52A0\u8F7D\uFF1A\u4E3A1\u65F6\u4ECE\u6570\u636E\u7AEF\u52A0\u8F7D\u503C
newcounterReverseCountTip = \u53CD\u5411\u8BA1\u6570: \u4E3A1\u65F6\u53CD\u5411\u8BA1\u6570
newcounterEnableTip = \u4F7F\u80FD: \u4E3A0\u65F6\u505C\u6B62\u8BA1\u6570
# std/DFlipFlop.java
dFlipFlopComponent = D\u89E6\u53D1\u5668(D Flip-Flop)
# std/TFlipFlop.java
tFlipFlopComponent = T\u89E6\u53D1\u5668(T Flip-Flop)
# std/JKFlipFlop.java
jkFlipFlopComponent = JK\u89E6\u53D1\u5668(J-K Flip-Flop)
# std/PlaRom.java
PlaRomComponent = \u53EF\u7F16\u7A0B\u903B\u8F91\u95E8\u9635\u5217(PLA ROM)
PlaOutputsAttr = \u8F93\u51FA\u6570
PlaANDAttr = \u5185\u90E8\u4E0E\u95E8\u6570\u76EE
PlaRomEnabletip = \u4F7F\u80FD: \u4E3A0\u65F6\u7981\u7528
# std/SRFlipFlop.java
srFlipFlopComponent = RS\u9501\u5B58\u5668(S-R Flip-Flop)
# std/Random.java
randomSeedAttr = \u79CD\u5B50
randomComponent = \u968F\u673A\u6570\u751F\u6210\u5668(Random Generator)
randomQTip = \u8F93\u51FA:\u968F\u673A\u5E8F\u5217\u4E2D\u7684\u5F53\u524D\u968F\u673A\u503C
randomClockTip = \u65F6\u949F:\u5F53\u89E6\u53D1\u65F6\u66F4\u65B0\u751F\u6210\u5668\u72B6\u6001
randomNextTip = \u4F7F\u80FD:\u89E6\u53D1\u65F6\u8DF3\u5230\u4E0B\u4E00\u4E2A\u968F\u673A\u503C
randomResetTip = \u6E05\u7A7A:\u5F53\u4E3A1\u65F6,\u5F02\u6B65\u91CD\u7F6E\u5230\u79CD\u5B50\u7684\u503C
# std/Register.java
registerComponent = \u5BC4\u5B58\u5668(Register)
registerQTip = \u8F93\u51FA:\u5F53\u524D\u5BC4\u5B58\u5668\u7684\u503C
registerDTip = \u6570\u636E:\u5F53\u65F6\u949F\u89E6\u53D1\u65F6\u8F93\u5165\u5230\u5BC4\u5B58\u5668\u7684\u503C
registerClkTip = \u65F6\u949F:\u5F53\u89E6\u53D1\u65F6\u66F4\u65B0\u5BC4\u5B58\u5668\u503C
registerClrTip = \u6E05\u7A7A:\u4E3A1\u65F6,\u5F02\u6B65\u91CD\u7F6E\u5BC4\u5B58\u5668\u52300\uFF08\u5C0F\u5FC3\u6BDB\u523A\uFF09
registerPreTip = \u7F6E\u4F4D:\u4E3A1\u65F6,\u5F02\u6B65\u91CD\u7F6E\u5BC4\u5B58\u5668\u52301\uFF08\u5C0F\u5FC3\u6BDB\u523A\uFF09
registerEnableTip = \u4F7F\u80FD:\u5F53\u4E3A0\u65F6,\u5FFD\u7565\u65F6\u949F\u8F93\u5165
registerLabel = Reg
registerWidthLabel = (%sb)
# std/RamFactory.java
ramComponent = \u968F\u673A\u5B58\u50A8\u5668(RAM)
# std/RomFactory.java
romComponent = \u53EA\u8BFB\u5B58\u50A8\u5668(ROM)
romContentsAttr = \u5B58\u50A8\u6570\u636E
romContentsValue = (\u70B9\u51FB\u8FDB\u884C\u7F16\u8F91)
romChangeAction = \u7F16\u8F91\u5B58\u50A8\u6570\u636E
# std/Ram.java
ramAddrWidthAttr = \u5730\u5740\u4F4D\u5BBD
ramDataWidthAttr = \u6570\u636E\u4F4D\u5BBD
ramSelAttr = \u7247\u9009\u4FE1\u53F7\u6709\u6548\u503C:
ramDataLabel = D
ramAddrLabel = A
ramWELabel = str
ramCSLabel = sel
ramOELabel = ld
ramClrLabel = clr
ramGigabyteLabel = %sGB RAM
ramMegabyteLabel = %sMB RAM
ramKilobyteLabel = %sKB RAM
ramByteLabel = %sB RAM
romGigabyteLabel = %sGB ROM
romMegabyteLabel = %sMB ROM
romKilobyteLabel = %sKB ROM
romByteLabel = %sB ROM
memDataTip = \u6570\u636E:\u5BF9\u5E94\u5730\u5740\u5355\u5143\u7684\u6570\u636E
memAddrTip = \u5730\u5740:\u9700\u8981\u8BBF\u95EE\u6570\u636E\u7684\u5730\u5740
memCSTip = \u7247\u9009: %s \u7981\u7528\u7EC4\u4EF6
ramClkTip = \u65F6\u949F:\u4ECE0\u52301\u65F6\u66F4\u65B0\u5185\u5B58\u6570\u636E
ramOETip = \u52A0\u8F7D:\u4E3A1\u65F6,\u5C06\u5185\u5B58\u52A0\u8F7D\u5230\u8F93\u51FA
ramWETip = \u5B58\u50A8:\u4E3A1\u65F6,\u4ECE\u8F93\u5165\u7AEF\u5B58\u50A8\u6570\u636E
ramClrTip = \u6E05\u7A7A:\u5F53\u4E3A1\u65F6,\u5F02\u6B65\u91CD\u7F6E\u5185\u5B58\u4E3A\u51680
ramBusTip = \u6570\u636E:\u5B58\u50A8\u5728\u6307\u5B9A\u5730\u5740\u7684\u6570\u636E
ramInTip = \u8F93\u5165:\u5373\u5C06\u5199\u5165\u7684\u6570\u636E\u503C
ramBusAttr = \u6570\u636E\u63A5\u53E3
ramBusSynchCombined = \u4E00\u4E2A\u540C\u6B65\u52A0\u8F7D/\u5B58\u50A8\u5F15\u811A
ramBusAsynchCombined = \u4E00\u4E2A\u5F02\u6B65\u52A0\u8F7D/\u5B58\u50A8\u5F15\u811A
ramBusSeparate = \u5206\u79BB\u7684\u52A0\u8F7D\u548C\u5B58\u50A8\u5F15\u811A
ramEditMenuItem = \u7F16\u8F91\u5B58\u50A8\u5185\u5BB9...
ramClearMenuItem = \u6E05\u7A7A\u6240\u6709\u6570\u636E\u5185\u5BB9
ramLoadMenuItem = \u52A0\u8F7D\u6570\u636E\u955C\u50CF...
ramSaveMenuItem = \u4FDD\u5B58\u6570\u636E\u955C\u50CF...
ramConfirmClearTitle = \u786E\u8BA4\u6E05\u7A7A
ramConfirmClearMsg = \u4F60\u786E\u5B9A\u4F60\u5E0C\u671B\u5C06\u5185\u5B58\u6570\u636E\u5168\u90E8\u6E050\u5417?
ramLoadDialogTitle = \u52A0\u8F7DRAM\u955C\u50CF
romLoadDialogTitle = \u52A0\u8F7DROM\u955C\u50CF
ramLoadErrorTitle = \u52A0\u8F7D\u9519\u8BEF
ramSaveDialogTitle = \u4FDD\u5B58RAM\u955C\u50CF
romSaveDialogTitle = \u4FDD\u5B58ROM\u955C\u50CF
ramSaveErrorTitle = \u4FDD\u5B58\u9519\u8BEF
# std/memory/ShiftRegister.java
shiftRegisterComponent = \u79FB\u4F4D\u5BC4\u5B58\u5668(Shift Register)
shiftRegisterLabel1 = shift reg
shiftRegisterLabel2 = %sx%s
shiftRegLengthAttr = \u5B58\u50A8\u6BB5\u6570
shiftRegParallelAttr = \u5E76\u884C\u52A0\u8F7D
shiftRegShiftTip = \u79FB\u4F4D:\u4E3A0\u65F6\u7981\u7528\u79FB\u4F4D
shiftRegClockTip = \u65F6\u949F:\u89E6\u53D1\u65F6\u66F4\u65B0\u72B6\u6001
shiftRegClearTip = \u6E05\u7A7A:\u4E3A1\u65F6,\u5F02\u6B65\u91CD\u7F6E\u6240\u6709\u5355\u5143\u4E3A0
shiftRegInTip    = \u8F93\u5165:\u5C06\u5B58\u50A8\u5230\u7B2C\u4E00\u6BB5\u7684\u6570\u636E
shiftRegOutTip   = \u8F93\u51FA:\u6700\u540E\u4E00\u4E2A\u5B58\u50A8\u6BB5\u7684\u6570\u636E
shiftRegLoadTip  = \u52A0\u8F7D:\u4E3A1\u4E14\u79FB\u4F4D\u7AEF\u4E3A0\u65F6,\u5C06\u6240\u6709\u5B58\u50A8\u6BB5\u66F4\u65B0\u4E3A\u8F93\u5165\u7AEF\u7684\u6570\u636E

#
# std/Plexers.java
#
plexerLibrary = \u590D\u7528\u5668(Plexers)
plexerSelectBitsAttr = \u9009\u62E9\u7AEF\u4F4D\u5BBD
plexerThreeStateAttr = \u4E09\u6001?
plexerDisabledAttr = \u7981\u7528\u65F6\u7684\u8F93\u51FA
plexerDisabledFloating = \u672A\u5B9A\u4E49
plexerDisabledZero = 0
plexerNoInputStateAttr = \u542f\u52a8\u65f6\u52a0\u8f7d\u5e93
plexerEnableAttr = \u5305\u542B\u4F7F\u80FD\u7AEF?
plexerSelectLocAttr = \u9009\u62E9\u7AEF\u4F4D\u7F6E
plexerSelectTopRightOption = \u9876\u90E8/\u53F3\u4FA7
plexerSelectBottomLeftOption = \u5E95\u90E8/\u5DE6\u4FA7
# std/Multiplexer.java
multiplexerComponent = \u591A\u8DEF\u9009\u62E9\u5668(Multiplexer)
multiplexerSelectTip = \u9009\u62E9: \u63A7\u5236\u90A3\u4E00\u8DEF\u8F93\u5165\u8F93\u51FA
multiplexerEnableTip = \u4F7F\u80FD: \u4E0D\u4E3A0\u65F6\u8F93\u51FA\u9009\u62E9\u8F93\u5165
multiplexerInTip = \u8F93\u5165%s
multiplexerOutTip = \u8F93\u51FA
# std/Demultiplexer.java
demultiplexerComponent = \u89E3\u590D\u7528\u5668(Demultiplexer)
demultiplexerSelectTip = \u9009\u62E9:\u5B9A\u4E49\u54EA\u4E2A\u8F93\u51FA\u7AEF\u8F93\u51FA\u8F93\u5165\u6570\u636E
demultiplexerEnableTip = \u4F7F\u80FD: \u4E0D\u4E3A0\u65F6\u9009\u62E9\u6B63\u786E\u8F93\u51FA\u7AEF\u8F93\u51FA
demultiplexerInTip = \u8F93\u5165
demultiplexerOutTip = \u8F93\u51FA%s
# std/Decoder.java
decoderComponent = \u8BD1\u7801\u5668(Decoder)
decoderSelectTip = \u9009\u62E9:\u63A7\u5236\u54EA\u4E2A\u8F93\u51FA\u4E3A1
decoderEnableTip = \u4F7F\u80FD:\u5F53\u4E0D\u662F0\u65F6,\u9009\u62E9\u7684\u8F93\u51FA\u6210\u4E3A1
decoderOutTip = \u8F93\u51FA%s
# std/DisplayDecoder.java
DisplayDecoderComponent = 7\u6BB5\u6570\u7801\u7BA1\u8BD1\u7801\u5668(7-Segment Display Decoder)
DisplayDecoderOutTip = \u8F93\u51FA %s
DisplayDecoderInTip = \u8F93\u5165 %s
# std/plexers/PriorityEncoder.java
priorityEncoderComponent = \u4F18\u5148\u7F16\u7801\u5668(Priority Encoder)
priorityEncoderInTip = \u8F93\u5165 %s
priorityEncoderOutTip = \u8F93\u51FA:\u4F4D\u7F6E\u6700\u5927\u7684\u503C\u4E3A1\u7684\u8F93\u5165\u7684\u5730\u5740
priorityEncoderEnableInTip = \u4F7F\u80FD\u8F93\u5165: \u4E3A\u96F6\u7981\u7528\u7EC4\u4EF6
priorityEncoderEnableOutTip = \u4F7F\u80FD\u8F93\u51FA: \u4E3A1\u4E14\u6CA1\u6709\u8F93\u5165\u7AEF\u4E3A1\uFF0C\u8F93\u51FA1
priorityEncoderGroupSignalTip = \u7EC4\u9009\u62E9: \u5982\u679C\u4F7F\u80FD\u7AEF\u4E3A1\u4E14\u6709\u8F93\u5165\u7AEF\u4E3A1\uFF0C\u8F93\u51FA1
# std/BitSelector.java
bitSelectorComponent = \u4F4D\u9009\u62E9\u5668(Bit Selector)
bitSelectorGroupAttr = \u8F93\u51FA\u4F4D\u5BBD
bitSelectorOutputTip = \u8F93\u51FA:\u4ECE\u6570\u636E\u7AEF\u8F93\u5165\u6240\u9009\u62E9\u7684\u6BD4\u7279\u4F4D\u5143\u7EC4\u7684\u503C
bitSelectorDataTip = \u6570\u636E
bitSelectorSelectTip = \u9009\u62E9:\u5B9A\u4E49\u9009\u62E9\u6570\u636E\u7AEF\u8F93\u5165\u7684\u54EA\u4E2A\u6BD4\u7279\u4F4D\u5143\u7EC4
#
# arith/Arithmetic.java
#
arithmeticLibrary = \u8FD0\u7B97\u5668(Arithmetic)
# arith/Adder.java
adderComponent = \u52A0\u6CD5\u5668(Adder)
adderInputTip = \u8F93\u5165:\u76F8\u52A0\u6570
adderOutputTip = \u8F93\u51FA:\u548C\u6570(\u52A0\u4E0A\u8FDB\u4F4D)
adderCarryInTip = \u8FDB\u4F4D\u8F93\u5165
adderCarryOutTip = \u8FDB\u4F4D\u8F93\u51FA
# arith/Subtractor.java
subtractorComponent = \u51CF\u6CD5\u5668(Subtractor)
subtractorMinuendTip = \u88AB\u51CF\u6570
subtractorSubtrahendTip = \u51CF\u6570
subtractorOutputTip = \u8F93\u51FA:\u5DEE\u503C
subtractorBorrowInTip = \u501F\u4F4D\u8F93\u5165:\u5982\u679C\u662F1,\u8F93\u51FA\u65F6\u51CF\u53BB1
subtractorBorrowOutTip = \u501F\u4F4D\u8F93\u51FA:\u5982\u679C\u6700\u7EC8\u5F97\u5230\u8D1F\u6570\u5219\u4E3A1
# arith/Multiplier.java
multiplierComponent = \u4E58\u6CD5\u5668(Multiplier)
multiplierInputTip = \u8F93\u5165:\u4E58\u6570
multiplierOutputTip = \u8F93\u51FA:\u4E24\u4E2A\u8F93\u5165\u7684\u79EF,\u52A0\u4E0A\u8FDB\u4F4D\u8F93\u5165
multiplierCarryInTip = \u8FDB\u4F4D\u8F93\u5165:\u9700\u8981\u52A0\u5165\u7ED3\u679C\u7684\u6570
multiplierCarryOutTip = \u8FDB\u4F4D\u8F93\u51FA:\u4E58\u79EF\u7684\u9AD8\u4F4D\u6BD4\u7279
# arith/Divider.java
dividerComponent = \u9664\u6CD5\u5668(Divider)
dividerUpperInput = upper
dividerRemainderOutput = rem
dividerDividendLowerTip = \u88AB\u9664\u6570\u4F4E\u4F4D:\u88AB\u9664\u6570\u7684\u4F4E\u4F4D\u90E8\u5206
dividerDividendUpperTip = \u88AB\u9664\u6570\u9AD8\u4F4D:\u88AB\u9664\u6570\u7684\u9AD8\u4F4D\u90E8\u5206
dividerDivisorTip = \u9664\u6570
dividerOutputTip = \u8F93\u51FA:\u5546
dividerRemainderTip = \u4F59\u6570:\u88AB\u9664\u6570-\u5546*\u9664\u6570
# arith/Negator.java
negatorComponent = \u6C42\u8865\u5668(Negator)
negatorInputTip = \u8F93\u5165:\u9700\u8981\u5F97\u5230\u76F8\u53CD\u6570\u7684\u6570
negatorOutputTip = \u8F93\u51FA:\u8F93\u5165\u6570\u8D1F\u503C\u5173\u4E8E2\u7684\u8865\u7801
# arith/Comparator.java
comparatorComponent = \u6BD4\u8F83\u5668(Comparator)
comparatorType = \u6BD4\u8F83\u5668\u7C7B\u578B
unsignedOption = \u65E0\u7B26\u53F7
twosComplementOption = 2\u7684\u8865\u7801
comparatorInputATip = A:\u8981\u6267\u884C\u6BD4\u8F83\u64CD\u4F5C\u7684\u6570
comparatorInputBTip = B:\u8981\u6267\u884C\u6BD4\u8F83\u64CD\u4F5C\u7684\u6570
comparatorLessTip = \u5C0F\u4E8E:\u5982\u679CA<B,\u8F93\u51FA1
comparatorEqualTip = \u7B49\u4E8E:\u5982\u679CA=B,\u8F93\u51FA1
comparatorGreaterTip = \u5927\u4E8E:\u5982\u679CA>B,\u8F93\u51FA1
# arith/Shifter.java
shifterComponent = \u79FB\u4F4D\u5668(Shifter)
shifterShiftAttr = \u79FB\u4F4D\u7C7B\u578B
shiftLogicalLeft = \u903B\u8F91\u5DE6\u79FB
shiftLogicalRight = \u903B\u8F91\u53F3\u79FB
shiftArithmeticRight = \u8FD0\u7B97\u53F3\u79FB
shiftRollLeft = \u5FAA\u73AF\u5DE6\u79FB
shiftRollRight = \u5FAA\u73AF\u53F3\u79FB
shifterDistanceTip = \u4F4D\u6570:\u79FB\u51E0\u4F4D
shifterInputTip = \u8F93\u5165:\u9700\u8981\u79FB\u4F4D\u7684\u6570\u636E
shifterOutputTip = \u8F93\u51FA:\u79FB\u4F4D\u540E\u7684\u7ED3\u679C
# arith/BitAdder.java
bitAdderComponent = \u9010\u4F4D\u52A0\u6CD5\u5668(Bit Adder)
bitAdderInputTip = \u8F93\u5165:\u9700\u8981\u8BA1\u7B97\u7684\u6570\u636E
bitAdderOutputManyTip = \u8F93\u51FA:\u8F93\u5165\u6570\u636E\u6709\u591A\u5C11\u4F4D\u4E3A1
# arith/BitFinder.java
bitFinderComponent = \u4F4D\u67E5\u627E\u5668(Bit Finder)
bitFinderFindLabel = find
bitFinderHighLabel = high
bitFinderLowLabel = low
bitFinderHighOption = \u7D22\u5F15\u4F4D\u7F6E\u6700\u9AD8\u7684%s
bitFinderLowOption = \u7D22\u5F15\u4F4D\u7F6E\u6700\u4F4E\u7684%s
bitFinderTypeAttr = \u7C7B\u578B
bitFinderIndexHighTip = \u4E0B\u6807:\u8F93\u5165\u4E2D\u7D22\u5F15\u4F4D\u7F6E\u6700\u9AD8\u7684%s\u7684\u4E0B\u6807
bitFinderIndexLowTip = \u4E0B\u6807:\u8F93\u5165\u4E2D\u7D22\u5F15\u4F4D\u7F6E\u6700\u4F4E\u7684%s\u7684\u4E0B\u6807
bitFinderPresentTip = \u5F53\u524D:\u5982\u679C\u8F93\u5165\u6570\u636E\u5305\u542B%s\u5219\u4E3A1
bitFinderInputTip = \u8F93\u5165:\u9700\u8981\u67E5\u627E\u7684\u6570\u636E
#
# io
#
# io/Io.java
ioLibrary = \u8F93\u5165/\u8F93\u51FA(Input/Output)
ioLabelCenter = \u4E2D\u5FC3
ioBitWidthAttr = \u4F4D\u5BBD
ioColorAttr = \u989C\u8272
ioLabelLocAttr = \u6807\u7B7E\u4F4D\u7F6E
ioLabelColorAttr = \u6807\u7B7E\u989C\u8272
ioActiveAttr = \u9AD8\u7535\u5E73\u6709\u6548?
# io/Button.java
buttonComponent = \u6309\u94AE(Button)
# io/Switch.java
switchComponent = \u5F00\u5173(Switch)
# io/DipSwitch.java
DipSwitchComponent = \u62E8\u7801\u5F00\u5173(Dip Switch)
NumberOfSwitch= \u5F00\u5173\u6570\u76EE
# io/Slider.java
right_to_leftOption = \u4ECE\u53F3\u5230\u5DE6
left_to_rightOption = \u4ECE\u5DE6\u5230\u53F3
# io/Joystick.java
joystickComponent = \u6447\u6746(Joystick)
# io/Keyboard.java
keyboardComponent = \u952E\u76D8(Keyboard)
keybDesc = \u952E\u76D8 (\u7F13\u51B2\u5BB9\u91CF. %s)
keybBufferLengthAttr = \u7F13\u51B2\u957F\u5EA6
keybClearTip = \u6E05\u7A7A:\u4E3A1\u65F6\u6E05\u7A7A\u7F13\u51B2\u533A
keybClockTip = \u65F6\u949F:\u89E6\u53D1\u65F6\u6D88\u8017\u7F13\u51B2\u533A\u6700\u524D\u7AEF\u7684\u5B57\u7B26
keybEnableTip = \u8BFB\u4F7F\u80FD:\u4E3A0\u65F6\u5FFD\u7565\u65F6\u949F\u8F93\u5165
keybAvailTip = \u6570\u636E\u53EF\u7528:\u5982\u679C\u7F13\u51B2\u533A\u5185\u542B\u6709\u5B57\u7B26\u5219\u4E3A1
keybOutputTip = \u6570\u636E: %s \u5F53\u524D\u7F13\u51B2\u533A\u6700\u524D\u7AEF\u5B57\u7B26\u7684ASCII\u7801
# io/Buzzer.java
buzzerComponent = \u8702\u9E23\u5668(Buzzer)
enableSound = \u4F7F\u80FD: \u4E3A1\u65F6\u6253\u5F00\u58F0\u97F3
buzzerVolume = \u97F3\u91CF (0-127)
buzzerVolumeBitWidth = \u97F3\u91CF\u6570\u636E\u4F4D
buzzerFrequecy = \u9891\u7387 (12b)
# io/Led.java
ledComponent = \u53D1\u5149\u4E8C\u6781\u7BA1(LED)
# io/RGBLed.java
rgbledComponent = \u5F69\u8272\u53D1\u5149\u4E8C\u6781\u7BA1(RGB LED)
ioMultiBit = \u591A\u4F4D?
# io/DigitalOscilloscope.java
DigitalOscilloscopeComponent = \u6570\u5B57\u793A\u6CE2\u5668(Digital Oscilloscope)
NStateAttr = \u793A\u6CE2\u5668\u53EF\u89C6\u72B6\u6001\u6570
ShowClockAttribute = \u663E\u793A\u65F6\u949F\u8F93\u5165\u6CE2\u5F62?
DrawClockFrontLine= \u65F6\u949F\u8FB9\u6CBF\u8F85\u52A9\u7EBF
noOption= \u65E0
bothOption= \u4E0A\u8DF3\u6CBF\u4E0B\u8DF3\u6CBF\u5747\u663E\u793A
BorderColor = \u8FB9\u6846\u989C\u8272
DigitalOscilloscopeClock = \u65F6\u949F\u8F93\u5165
ClearDiagram = \u6E05\u9664\u8F93\u51FA: \u4E3A1\u65F6\u6E05\u9664\u6CE2\u5F62
# io/SevenSegment.java
sevenSegmentComponent = 7\u6BB5\u6570\u7801\u7BA1(7-Segment Display)
# io/HexDigit.java
hexDigitComponent = 16\u8FDB\u5236\u6570\u5B57\u663E\u793A(Hex Digit Display)
# io/DotMatrix.java
dotMatrixComponent = LED\u70B9\u9635(LED Matrix)
ioMatrixInput = \u8F93\u5165\u683C\u5F0F
ioMatrixRows = \u70B9\u9635\u884C\u6570
ioMatrixCols = \u70B9\u9635\u5217\u6570
ioOnColor = \u70B9\u4EAE\u65F6\u989C\u8272
ioOffColor = \u7184\u706D\u65F6\u989C\u8272
ioBackgroundColor = \u80CC\u666F
ioMatrixPersistenceAttr = \u706F\u5149\u6301\u7EED\u65F6\u95F4
ioMatrixShape = LED\u70B9\u7684\u5F62\u72B6
Column = \u5217 %s
Row = \u884C %s
ioInputColumn = \u5217
ioInputRow = \u884C
ioInputSelect = \u9009\u62E9\u884C/\u5217
ioShapeCircle = \u5706\u5F62
ioShapeSquare = \u65B9\u5F62
# io/Tty.java
ttyComponent = \u6587\u672C\u54D1\u7EC8\u7AEF(TTY)
ttyDesc = \u54D1\u7EC8\u7AEF(%s\u884C,%s\u5217)
ttyDescShort = \u54D1\u7EC8\u7AEF
ttyRowsAttr = \u884C\u6570
ttyColsAttr = \u5217\u6570
ttyClearTip = \u6E05\u7A7A:\u4E3A1\u65F6\u6E05\u7A7A\u5C4F\u5E55
ttyClockTip = \u65F6\u949F:\u89E6\u53D1\u65F6\u5199\u5165\u6570\u636E\u7AEF\u7684\u5B57\u7B26
ttyEnableTip = \u5199\u5165\u4F7F\u80FD:\u4E3A0\u65F6\u5FFD\u7565\u65F6\u949F\u8F93\u5165
ttyInputTip = \u6570\u636E:\u4E0B\u4E00\u4E2A\u9700\u5199\u5165\u5B57\u7B26\u7684ASCII\u7801
